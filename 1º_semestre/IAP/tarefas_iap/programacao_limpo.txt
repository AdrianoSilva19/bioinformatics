elaboração de programas
os programas disponibilizam conhecimentos e estratégias de resolução de problemas indispensáveis para que os computadores hwso possam desempenhar o seu papel 
cabe ao programador fornecer estes conhecimentos e estratégias pelo que a capacidade de encontrar soluções para problemas é fundamental para um bom programador 
a programação é desse modo a arte de analisar um problema e encontrar um conjunto de ações algoritmo capaz de o resolver corretamente e eficazmente é aqui que reside a grande dificuldade dos alunos nesta uc pois estão mais habituados a tarefas de memorização e de aplicação automática de fórmulas
muitas vezes confundese aprender a programar com aprender uma linguagem de programação aprender a programar é bem mais complexo um bom programador é aquele que consegue encontrar soluções eficazes para problemas de programação

motivação
devem ser consideradas as seguintes fases na elaboração de um programa
 especificação do problema
 planeamento da solução
 codificação
 verificação
essas fases são dependentes entre si na medida em que em muitas situações é necessário voltar a executar uma fase anterior para chegar a uma solução final satisfatória evidentemente que a alteração da especificação inicial do problema na fase de verificação é muito mais grave de que a correção dum erro de codificação 
no entanto isso pode acontecer na medida em que em muitas situações o diálogo entre o programador e o utilizador final é complicado porque o utilizador não tem experiência não tem noção real do que efetivamente pretende quando assiste à verificação do programa lembrase de novas funcionalidades não quer dialogar não tem tempo para dialogar é renitente à informatização porque acha que vai perturbar a sua estabilidade ou muitas outras causas
a figura  ilustra de uma forma um pouco exagerada aquilo em que pode resultar o mau entendimento entre o programador e o utilizador
em problemas complexos a duração das quatro fases pode ser de vários meses o que faz com que se os passos indicados nas fases não tiverem sido ultrapassados com segurança muito do tempo trabalho e investimento pode ser deitado fora no final 
convém sempre fazer um planeamento detalhado da solução antes de se começar a fase de codificação por que não construir um protótipo que deve vir a ser aprovado isto porque nas fases * e * os métodos de trabalho e os objetivos são totalmente diferentes na fase * são esquematizados os métodos para chegar à solução do problema na fase * desenvolvese uma implementação onde o próprio aspeto estético e a comunicação com o utilizador têm um papel relevante não se devem misturar essas duas fases para não se chegar a soluções indesejadas e deficientes

especificação do problema
é evidente que os recursos humanos materiais e financeiros envolvidos são parâmetros muito importantes para atingir uma determinada solução como no desenvolvimento de qualquer projeto de engenharia o fator preço/qualidade deve ser tido em conta e as opções devem ser equacionadas discutidas e aprovadas
na especificação do problema devem ser quantificados em primeiro lugar quais os resultados pretendidos depois quais os dados que devem ser utilizados para atingir a solução a obtenção da solução será possível através da descrição das funções que transformam os dados em resultados a subdivisão do problema em subproblemas especificando quais as ligações entre esses problemas é uma tarefa muito importante porque o processo deverá sempre ser seguido com segurança sem a possibilidade de surgirem erros nas diversas transições um erro mesmo pequeno poderá destruir muito trabalho e levar a atingir soluções diferentes daquelas inicialmente propostas
planeamento da solução
o planeamento da solução requer a construção de um algoritmo eficiente que manipule o conjunto de dados em jogo por forma a chegar à solução escolhemos para isso uma linguagem sintática comandos e semanticamente regras bem definida sendo um algoritmo constituído por uma sequência de comandos pertencentes a essa linguagem 
os comandos definem ações que devem ser executadas passoapasso de modo a obterse uma solução para o problema num número finito de passos um conjunto de ações executadas pelo algoritmo define uma ação mais complexa que poderá permitir obter a solução dum dos subproblemas do problema proposto usaremos também o termo operação para representar as ações elementares ou ações mais complexas a linguagem algorítmica utilizada nesta fase é completamente independente da linguagem de programação utilizada na fase posterior
a linguagem algorítmica não é executada pelo computador apenas serve para a elaboração de um documento de suporte que será de enorme utilidade na codificação e que também servirá de suporte para eventuais discussões sobre decisões técnicas a tomar naquela fase os erros semânticos são mais fáceis de detetar nesta fase os erros sintáticos não têm muita importância o bom senso aconselha todavia que nesta fase seja tomada a decisão sobre qual a linguagem de programação a utilizar muitas vezes a escolha não é muito grande na medida em que para programar codificar é necessária experiência e não se pode ter essa experiência em muitas linguagens

codificação
a fase de codificação é simples se o algoritmo for bem elaborado e existir um conjunto de regras de tradução bem definidas algumas partes dessa tradução podem ser mais complicadas se houver necessidade de utilizar estruturas de dados ou de controlo mais complexas
o programador também com certeza pretenderá tirar o máximo partido das potencialidades específicas da linguagem que utiliza e porque não utilizar algumas bibliotecas de funções que tenham sido já escritas noutras codificações e que lhe irão facilitar a tarefa um aspeto muito importante nesta fase tem a ver com a construção de ferramentas que permitam uma fácil utilização do programa
o programador deverá ter em conta que o utilizador apreciará um programa com estética cuidada simples de usar com ajudas que surgem interactivamente rápido e económico

verificação
a verificação contempla dois aspetos complementares o teste e a manutenção o teste é basicamente a fase mais esperada em todo o processo pela primeira vez vão ser fornecidos dados ao problema e vaise analisar a solução é evidente que algumas situações estranhas vão ser detetadas e devese proceder à sua correção algumas surpresas também podem surgir porque o teste deve ser efetuado pelo menos por duas pessoas o programador que vai verificar se o seu trabalho deu os resultados que ele pretendia e o utilizador final ou alguém que o represente que vai avaliar todo o processo desde a primeira até a terceira fase 
é certo que esta última situação deve ser preparada com cuidado e é conveniente que em projetos de grande duração se tenha procedido previamente a algumas demonstrações para evitar surpresas desagradáveis o teste termina no momento em que o programa passe a ser utilizado normalmente começando então a manutenção
na manutenção podem também surgir situações incorretas que não tenham sido detetadas no teste situações que devem ser corrigidas obviamente em aplicações muito complexas a deteção de todas as anormalidades pode demorar muito tempo algumas vezes vários meses esses problemas não podem de maneira nenhuma impedir que o normal funcionamento do programa seja afetado e que os resultados não sejam disponibilizados
alguns problemas só são detetados com o tempo à medida que o volume de informação armazenada seja maior noutras situações deficiências do sistema operativo ou da própria eletrónica podem causar avarias ou inconsistências que podem afetar o normal funcionamento do programa também alterações à legislação nacional internacional ou normas da própria estrutura podem obrigar a intervenções alterações ao programa a manutenção tem como objetivo a resolução de todos esses tipos de problemas

